name: Build
on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'build.sh'
      - 'Dockerfile'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: "x64"
            docker-arch: "amd64"
          - arch: "arm64"
            docker-arch: "arm64"
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Build
        run: |
          docker buildx build --build-arg ARCH=${{ matrix.arch }} --build-arg TAG=${{ github.run_number }} --platform=linux/${{ matrix.docker-arch }} --output type=local,dest=build .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}
          path: build/su-exec.tar.gz
          retention-days: 1

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          git tag $GITHUB_RUN_NUMBER
          git push origin $GITHUB_RUN_NUMBER
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: x64/su-exec.tar.gz
          asset_name: su-exec-x64-${{ github.run_number }}.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: arm64/su-exec.tar.gz
          asset_name: su-exec-arm64-${{ github.run_number }}.tar.gz
          asset_content_type: application/tar+gzip
